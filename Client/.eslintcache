[{"/home/dsgimhana/Desktop/Last/Monitor-Application/Monitor-Application/Client/src/index.js":"1","/home/dsgimhana/Desktop/Last/Monitor-Application/Monitor-Application/Client/src/App.js":"2","/home/dsgimhana/Desktop/Last/Monitor-Application/Monitor-Application/Client/src/reportWebVitals.js":"3","/home/dsgimhana/Desktop/Last/Monitor-Application/Monitor-Application/Client/src/components/DashBoard.js":"4","/home/dsgimhana/Desktop/Last/Monitor-Application/Monitor-Application/Client/src/components/LatestAlertInfo.js":"5","/home/dsgimhana/Desktop/Last/Monitor-Application/Monitor-Application/Client/src/components/Aboutus.js":"6","/home/dsgimhana/Desktop/Last/Monitor-Application/Monitor-Application/Client/src/components/SensorReadingChart.js":"7","/home/dsgimhana/Desktop/Last/Monitor-Application/Monitor-Application/Client/src/components/AlertHistoryTable.js":"8","/home/dsgimhana/Desktop/Last/Monitor-Application/Monitor-Application/Client/src/services/SensorService.js":"9","/home/dsgimhana/Desktop/Last/Monitor-Application/Monitor-Application/Client/src/services/auth.service.js":"10","/home/dsgimhana/Desktop/Last/Monitor-Application/Monitor-Application/Client/src/components/Login.js":"11","/home/dsgimhana/Desktop/Last/Monitor-Application/Monitor-Application/Client/src/components/Register.js":"12"},{"size":598,"mtime":1608631290180,"results":"13","hashOfConfig":"14"},{"size":2349,"mtime":1608633114306,"results":"15","hashOfConfig":"14"},{"size":362,"mtime":1608631290188,"results":"16","hashOfConfig":"14"},{"size":11278,"mtime":1608631290180,"results":"17","hashOfConfig":"14"},{"size":2225,"mtime":1608631290180,"results":"18","hashOfConfig":"14"},{"size":768,"mtime":1608631290180,"results":"19","hashOfConfig":"14"},{"size":5422,"mtime":1608631290180,"results":"20","hashOfConfig":"14"},{"size":2851,"mtime":1608631290180,"results":"21","hashOfConfig":"14"},{"size":182,"mtime":1608632509317,"results":"22","hashOfConfig":"14"},{"size":731,"mtime":1608632509317,"results":"23","hashOfConfig":"14"},{"size":3822,"mtime":1608632441577,"results":"24","hashOfConfig":"14"},{"size":5280,"mtime":1608632989819,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"s3nz5o",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"28"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"28"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"28"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"28"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"/home/dsgimhana/Desktop/Last/Monitor-Application/Monitor-Application/Client/src/index.js",[],["55","56"],"/home/dsgimhana/Desktop/Last/Monitor-Application/Monitor-Application/Client/src/App.js",[],"/home/dsgimhana/Desktop/Last/Monitor-Application/Monitor-Application/Client/src/reportWebVitals.js",[],"/home/dsgimhana/Desktop/Last/Monitor-Application/Monitor-Application/Client/src/components/DashBoard.js",["57","58","59"],"import React, { Component } from 'react'\nimport logo from '../logo.svg';\nimport josiah from '../member_images/1.jpg'\nimport deneth from '../member_images/2.jpeg'\nimport chinth from '../member_images/3.jpeg'\nimport randi from '../member_images/4.jpeg'\nimport thili from '../member_images/5.jpeg'\nimport mang from '../member_images/6.jpeg'\nimport '../App.css';\nimport SensorReadingChart from \"./SensorReadingChart\";\nimport LatestAlertInfo from \"./LatestAlertInfo\";\nimport AlertHistoryTable from \"./AlertHistoryTable\";\nimport {Link} from 'react-scroll'\nimport Aboutus from \"./Aboutus\";\n\nclass DashBoard extends Component {\n\n    ChangeGraph = (event) => {\n        console.error(event.target.value)\n        if (event.target.value == 1){\n            document.getElementById(\"temp-g\").style.display = \"block\"\n            document.getElementById(\"not-available-g\").style.display = \"none\"\n        }else{\n            document.getElementById(\"temp-g\").style.display = \"none\"\n            document.getElementById(\"not-available-g\").style.display = \"block\"\n        }\n    }\n    ChangeTable = (event) => {\n        console.error(event.target.value)\n        if (event.target.value == 1){\n            document.getElementById(\"temp-t\").style.display = \"block\"\n            document.getElementById(\"not-available-t\").style.display = \"none\"\n        }else{\n            document.getElementById(\"temp-t\").style.display = \"none\"\n            document.getElementById(\"not-available-t\").style.display = \"block\"\n        }\n    }\n    render() {\n        return (\n            <div className={'container-fluid bg-dark '}>\n                <div\n                    className={'row align-items-center justify-content-left bg-light text-dark p-3 sticky-top shadow-sm'}>\n                    <img className={'img-fluid p-1'} src={logo} width={\"50px\"}/>\n                    <span className={'h2'}> <b>Monitor</b> </span>\n                    <span className={'h3'}> <i>application.</i></span>\n                </div>\n                <div className={'row'}>\n                    <div className={'col-md-2 bg-dark p-3 text-white justify-content-center '} align={\"center\"}>\n                        <h6 className={'text-left '}><b>Monitor application</b></h6>\n\n                        <p className={'text-left'}><small>“Monitor” is a cloud-based sensor monitoring and alert\n                            management platform which can be used to centrally monitor any device regardless of its\n                            location. The main functionality of the system is to alert on certain events based on the\n                            readings coming from the sensors.</small></p>\n                        <Link to={\"latestAlert\"}\n                              className={'btn btn-outline-light d-md-block d-inline-block btn-sm m-2'}>Today\n                            alerts</Link>\n                        <Link to={\"graphs\"}\n                              className={'btn btn-outline-light d-md-block d-inline-block btn-sm m-2'}>Graphs</Link>\n                        <Link to={\"history\"} className={'btn btn-outline-light d-md-block d-inline-block btn-sm m-2'}>Alert\n                            history</Link>\n                        <Link to={\"about\"} className={'btn btn-outline-light d-md-block d-inline-block btn-sm m-2'}>About\n                            us</Link>\n\n                    </div>\n\n                    <div className={'col-md-10 p-3 bg-white'}>\n\n                        <div id=\"latestAlert\" className={\"card\"}>\n                            <div className={\"card-header\"}>\n                                Today Alerts\n                            </div>\n                            <div className={\"p-3 m-2\"} align={\"center\"}>\n                                <LatestAlertInfo icon=\"bi bi-thermometer-half\"               //Change chart bootstrap icon\n                                                 x=\"id\"                                      //Change chart x variable key name\n                                                 y=\"age\"                                     //Change chart y variable key name\n                                                 location=\"name\"                             //Change chart location key name\n                                                 yAxisLabel=\"Temperature\"                    //Change chart y axis label\n                                                 yUnit=\"F\"                                   //Change y variable unit\n                                                 xAxisLabel=\"Date and Time\"                  //Change chart x axis label\n                                                 threshold={30}                              //Change alert threshold\n                                                 apiEndPoint='http://localhost:8080/students'//Change dataset endpoint url\n                                                 themeColor={[\"red\"/*text color*/, \"rgba(255,165,0,0.2)\"/*table head bg color*/, \"rgba(255,0,0,0.02)\"/*table body bg color*/]}\n                                />\n                            </div>\n                        </div>\n                        <br/>\n                        <div id=\"graphs\" className={\"card\"}>\n                            <div className={\"card-header\"}>\n                                Sensor Reading Graphs\n                                <select className=\"form-control form-control-sm d-inline float-right\" style={{width:\"auto\", fontSize:\"12px\"}} onChange={this.ChangeGraph}>\n                                    <option selected value=\"1\">Temperature</option>\n                                    <option value=\"2\">Pressure</option>\n                                    <option value=\"3\">Humidity</option>\n                                </select>\n                            </div>\n                            <div className={\"p-3 m-2\"} id={\"temp-g\"}>\n                                <SensorReadingChart\n                                    icon=\"bi bi-thermometer-half\"               //Change chart bootstrap icon\n                                    chartTitle=\"Temperature Readings\"           //Change chart title\n                                    x=\"id\"                                      //Change chart x variable key name\n                                    y=\"age\"                                     //Change chart y variable key name\n                                    location=\"name\"                             //Change chart location key name\n                                    yAxisLabel=\"Temperature\"                    //Change chart y axis label\n                                    yUnit=\"F\"                                   //Change y variable unit\n                                    xAxisLabel=\"Date and Time\"                  //Change chart x axis label\n                                    threshold={30}                              //Change alert threshold\n                                    apiEndPoint='http://localhost:8080/students'//Change dataset endpoint url\n                                    themeColor={[\"red\", \"orange\"]}              //Change chart theme color x2\n                                />\n                            </div>\n                            <div className={\"p-3 m-2\"} id={\"not-available-g\"} style={{display:\"none\"}}>\n                                <h5 className=\"card-subtitle mb-2 text-muted\"><i className=\"bi bi-lightning\"></i>This Chart is currently unavailable!</h5>\n                            </div>\n                        </div>\n                        <br/>\n                        <div id=\"history\" className={\"card\"}>\n                            <div className={\"card-header\"}>\n                                Sensor Alert History\n                                <select className=\"form-control form-control-sm d-inline float-right\" style={{width:\"auto\", fontSize:\"12px\"}} onChange={this.ChangeTable}>\n                                    <option selected value=\"1\">Temperature</option>\n                                    <option value=\"2\">Pressure</option>\n                                    <option value=\"3\">Humidity</option>\n                                </select>\n                            </div>\n                            <div className={\"p-3 m-2\"} id={\"temp-t\"}>\n                                <AlertHistoryTable icon=\"bi bi-thermometer-half\"               //Change chart bootstrap icon\n                                                   tableTitle=\"Temperature Alert History\"   //Change chart title\n                                                   x=\"id\"                                        //Change chart x variable key name\n                                                   y=\"age\"                                       //Change chart y variable key name\n                                                   location=\"name\"                               //Change chart location key name\n                                                   yAxisLabel=\"Temperature\"                    //Change chart y axis label\n                                                   yUnit=\"F\"                                   //Change y variable unit\n                                                   xAxisLabel=\"Date and Time\"                  //Change chart x axis label\n                                                   threshold={30}                                //Change alert threshold\n                                                   apiEndPoint='http://localhost:8080/students'//Change dataset endpoint url\n                                                   themeColor={[\"red\"/*text color*/, \"rgba(255,165,0,0.3)\"/*table head bg color*/, \"rgba(255,0,0,0.02)\"/*table body bg color*/]}\n                                />\n                            </div>\n                            <div className={\"p-3 m-2\"} id={\"not-available-t\"} style={{display:\"none\"}}>\n                                <h5 className=\"card-subtitle mb-2 text-muted\"><i className=\"bi bi-lightning\"></i>This Table is currently unavailable!</h5>\n                            </div>\n                        </div>\n                        <br/>\n                    </div>\n\n                </div>\n\n                <div className={'row bg-light text-dark p-4 '} id=\"about\">\n                    <div className=\"container-fluid\">\n                        <div className={'row text-muted'}><i className=\"bi bi-person-lines-fill\"></i>&nbsp; About us</div>\n                        <div className={'row text-muted'}><small>We are Team D</small></div>\n                        <div align={\"center\"}>\n                            <Aboutus name={\"Dineth Shan Gimhana\"} id={\"SE/2017/013\"} profile={deneth}/>\n                            <Aboutus name={\"Chinthaka Chathuranga\"} id={\"SE/2017/003\"} profile={chinth}/>\n                            <Aboutus name={\"Randi Ayeshani\"} id={\"SE/2017/025\"} profile={randi}/>\n                            <Aboutus name={\"Thilina Madushan\"} id={\"SE/2017/033\"} profile={thili}/>\n                            <Aboutus name={\"Gnanasegaram Mangalan\"} id={\"SE/2017/028\"} profile={mang}/>\n                            <Aboutus name={\"Josiah Prathaban\"} id={\"SE/2017/022\"} profile={josiah}/>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n        );\n    }\n}\n\nexport default DashBoard;\n","/home/dsgimhana/Desktop/Last/Monitor-Application/Monitor-Application/Client/src/components/LatestAlertInfo.js",["60"],"import React, { Component } from 'react'\nimport SensorService from \"../services/SensorService\";\n\n\nlet apiEndPoint = \"\";\nlet threshold = 0;\nlet xAxisLabel = \"\";\nlet yAxisLabel = \"\";\nlet yUnit = \"\";\nlet x = \"\";\nlet y = \"\";\nlet location = \"\";\nlet icon = \"\";\nlet themeColor = [];\nlet index=0;\n\n\nclass LatestAlertInfo extends Component{\n\n    constructor(props) {\n        super(props);\n        threshold = props.threshold\n        xAxisLabel = props.xAxisLabel\n        yAxisLabel = props.yAxisLabel\n        x = props.x\n        y = props.y\n        location = props.location\n        icon = props.icon\n        apiEndPoint = props.apiEndPoint\n        yUnit = props.yUnit\n        themeColor = props.themeColor\n        this.state = {\n            sensorReadings: []\n        }\n    }\n\n    render() {\n        if(this.state.sensorReadings.length === 0)\n        {\n            return (<h5 className=\"card-subtitle mb-2 text-muted\"><i className=\"bi bi-shield-shaded\"></i>No alerts Yet!</h5>)\n        }\n        else{\n        return(\n            this.state.sensorReadings.map(data =>\n            <small><div className=\"card d-inline-block m-2\" style={{width: \"auto\", backgroundColor: themeColor[1], borderColor: themeColor[2]}}>\n                <div className=\"card-body\" align={\"left\"}>\n                    <big className=\"card-title\"><i className={icon} style={{color: themeColor[0]}}></i>{yAxisLabel} alert</big>\n                    <p className=\"card-subtitle mb-2\" style={{color: themeColor[0]}}>Threshold is {threshold +\" \"+yUnit}</p>\n\n                        <ul>\n                        <li className=\"card-text\">{yAxisLabel} : {data[y]}</li>\n                        <li className=\"card-text\">{xAxisLabel} : {data[x]}</li>\n                        <li className=\"card-text\">Location : {data[location]}</li>\n                        </ul>\n                </div>\n            </div>\n            </small>)\n        )}\n    }\n\n    componentDidMount() {\n        setInterval(function() {\n            SensorService.getSensorReadings(apiEndPoint).then((response)=>{\n                const sensorReadings = response.data\n                this.setState({sensorReadings})\n            });\n        }.bind(this), 1000);\n\n\n    }\n}\nexport default LatestAlertInfo;","/home/dsgimhana/Desktop/Last/Monitor-Application/Monitor-Application/Client/src/components/Aboutus.js",["61"],"import React, { Component } from 'react'\n\nlet name=\"\"\nlet id=\"\"\nlet profile= {}\nlet description =\"\"\n\n\nclass Aboutus extends Component{\n\n    constructor(props) {\n        super(props);\n        name = this.props.name\n        id = this.props.id\n        profile = this.props.profile\n        description = this.props.description\n    }\n    render() {\n        return(\n            <div className=\"card d-inline-block m-2 p-3 bg-light border-light\" align={\"center\"}>\n                <img src={profile} className=\"rounded-circle h5\" width={\"150px\"}/><br/>\n                <span>{name}</span><br/>\n                <span className=\"mb-2 text-muted\">{id}</span>\n                <p className=\"card-text\">{description}</p>\n            </div>\n        )\n\n    }\n}\nexport default Aboutus;","/home/dsgimhana/Desktop/Last/Monitor-Application/Monitor-Application/Client/src/components/SensorReadingChart.js",[],"/home/dsgimhana/Desktop/Last/Monitor-Application/Monitor-Application/Client/src/components/AlertHistoryTable.js",["62"],"import React, { Component } from 'react'\nimport SensorService from \"../services/SensorService\";\n\n\nlet apiEndPoint = \"\";\nlet threshold = 0;\nlet xAxisLabel = \"\";\nlet yAxisLabel = \"\";\nlet yUnit = \"\";\nlet x = \"\";\nlet y = \"\";\nlet location = \"\";\nlet tableTitle = \"\";\nlet icon = \"\";\nlet themeColor = [];\nlet index=0;\n\n\nclass AlertHistoryTable extends Component{\n\n    constructor(props) {\n        super(props);\n        threshold = props.threshold\n        xAxisLabel = props.xAxisLabel\n        yAxisLabel = props.yAxisLabel\n        tableTitle = props.tableTitle\n        x = props.x\n        y = props.y\n        location = props.location\n        icon = props.icon\n        apiEndPoint = props.apiEndPoint\n        yUnit = props.yUnit\n        themeColor = props.themeColor\n        this.state = {\n            sensorReadings: []\n        }\n    }\n\n    render() {\n        if(this.state.sensorReadings.length === 0)\n        {\n            return (<h5 className=\"card-subtitle mb-2 text-muted\" align={\"center\"}><i\n                className=\"bi bi-shield-shaded\"></i>Alert History empty!</h5>)\n        }\n        else{\n        return(\n            <div>\n                <div><big><i className={icon} style={{color: themeColor[0]}}></i>{tableTitle}</big></div>\n                <div style={{color: themeColor[0]}}>Threshold is {threshold +\" \"+yUnit}</div>\n                <br/>\n                <table className=\"table table-hover table-borderless table-sm\" >\n                    <thead>\n                    <tr style={{backgroundColor: themeColor[1]}}>\n                        <th scope=\"col\"><small>#</small></th>\n                        <th scope=\"col\"><small>{xAxisLabel}</small></th>\n                        <th scope=\"col\"><small>{yAxisLabel+\" in \"+yUnit}</small></th>\n                        <th scope=\"col\"><small>Location</small></th>\n                    </tr>\n                    </thead>\n                    <tbody className={\"text-dark\"}>\n                    {\n                        this.state.sensorReadings.map(data=>\n                            <tr>\n                                <th scope=\"row\"><small>{this.state.sensorReadings.indexOf(data)}</small></th>\n                                <td><small>{data[x]}</small></td>\n                                <td><small>{data[y]}</small></td>\n                                <td><small>{data[location]}</small></td>\n                            </tr>\n                        )\n                    }\n                    </tbody>\n                </table>\n            </div>\n        )}\n    }\n\n    componentDidMount() {\n        setInterval(function() {\n            SensorService.getSensorReadings(apiEndPoint).then((response)=>{\n                const sensorReadings = response.data\n                this.setState({sensorReadings})\n            });\n        }.bind(this), 1000);\n\n\n    }\n}\nexport default AlertHistoryTable;","/home/dsgimhana/Desktop/Last/Monitor-Application/Monitor-Application/Client/src/services/SensorService.js",[],"/home/dsgimhana/Desktop/Last/Monitor-Application/Monitor-Application/Client/src/services/auth.service.js",[],"/home/dsgimhana/Desktop/Last/Monitor-Application/Monitor-Application/Client/src/components/Login.js",[],"/home/dsgimhana/Desktop/Last/Monitor-Application/Monitor-Application/Client/src/components/Register.js",[],{"ruleId":"63","replacedBy":"64"},{"ruleId":"65","replacedBy":"66"},{"ruleId":"67","severity":1,"message":"68","line":20,"column":32,"nodeType":"69","messageId":"70","endLine":20,"endColumn":34},{"ruleId":"67","severity":1,"message":"68","line":30,"column":32,"nodeType":"69","messageId":"70","endLine":30,"endColumn":34},{"ruleId":"71","severity":1,"message":"72","line":43,"column":21,"nodeType":"73","endLine":43,"endColumn":81},{"ruleId":"74","severity":1,"message":"75","line":15,"column":5,"nodeType":"76","messageId":"77","endLine":15,"endColumn":10},{"ruleId":"71","severity":1,"message":"72","line":21,"column":17,"nodeType":"73","endLine":21,"endColumn":83},{"ruleId":"74","severity":1,"message":"75","line":16,"column":5,"nodeType":"76","messageId":"77","endLine":16,"endColumn":10},"no-native-reassign",["78"],"no-negated-in-lhs",["79"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-unused-vars","'index' is assigned a value but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]